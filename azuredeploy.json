{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.5.6.12127",
      "templateHash": "3973803974471500583"
    }
  },
  "parameters": {
    "cosmosDbLocation": {
      "type": "string",
      "metadata": {
        "description": "Location for the Cosmos DB account."
      },
      "allowedValues": [
        "East US",
        "East US 2",
        "Central US",
        "North Central US",
        "South Central US",
        "West US",
        "West US 2",
        "West US 3",
        "West Central US"
      ]
    }
  },
  "variables": {
    "cosmosAccountName": "[toLower( concat('smartbookinginc-', uniqueString(resourceGroup().id)))]",
    "cosmosDatabase1Name": "SharedThroughputDB",
    "cosmosDB1Container1Name": "CasinoHotel",
    "cosmosDB1Container1PK": "tenantId",
    "cosmosDB1Container2Name": "FamilyFunHotel",
    "cosmosDB1Container2PK": "tenantId",
    "cosmosDatabase2Name": "DedicatedThroughputDB",
    "cosmosDB2Container1Name": "GoodFellasHotel",
    "cosmosDB2Container1PK": "tenantId"
  },
  "resources": [
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2024-05-15",
      "name": "[variables('cosmosAccountName')]",
      "kind": "GlobalDocumentDB",
      "location": "[parameters('cosmosDbLocation')]",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "locations": [
          {
            "locationName": "[parameters('cosmosDbLocation')]"
          }
        ],
        "capacity": {
          "totalThroughputLimit": 11000
        },
        "capabilities": [
          {
            "name": "EnableServerless"
          },
          {
            "name": "EnableNoSQLVectorSearch"
          }
        ],
        "enableFreeTier": true,
        "cors": [
          {
            "allowedOrigins": "*"
          }
        ]
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2024-05-15",
      "name": "[format('{0}/{1}', toLower(variables('cosmosAccountName')), variables('cosmosDatabase1Name'))]",
      "properties": {
        "resource": {
          "id": "[variables('cosmosDatabase1Name')]"
        },
        "options": {
          "autoscaleSettings": {
            "maxThroughput": 2000
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', toLower(variables('cosmosAccountName')))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2024-05-15",
      "name": "[format('{0}/{1}/{2}', toLower(variables('cosmosAccountName')), variables('cosmosDatabase1Name'), variables('cosmosDB1Container1Name'))]",
      "properties": {
        "resource": {
          "id": "[variables('cosmosDB1Container1Name')]",
          "partitionKey": {
            "paths": [
              "[format('/{0}', variables('cosmosDB1Container1PK'))]"
            ],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/_etag/?"
              }
            ],
            "vectorIndexes": [
              {
                "path": "/vectorProperty",
                "type": "diskANN"
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', toLower(variables('cosmosAccountName')), variables('cosmosDatabase1Name'))]"
      ]
    },
            "excludedPaths": [
              {
                "path": "/_etag/?"
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', toLower(variables('cosmosAccountName')), variables('cosmosDatabase1Name'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2024-05-15",
      "name": "[format('{0}/{1}/{2}', toLower(variables('cosmosAccountName')), variables('cosmosDatabase1Name'), variables('cosmosDB1Container2Name'))]",
      "properties": {
        "resource": {
          "id": "[variables('cosmosDB1Container2Name')]",
          "partitionKey": {
            "paths": [
              "[format('/{0}', variables('cosmosDB1Container2PK'))]"
            ],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/_etag/?"
              }
            ],
            "vectorIndexes": [
              {
                "path": "/vectorProperty",
                "type": "diskANN"
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', toLower(variables('cosmosAccountName')), variables('cosmosDatabase1Name'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2024-05-15",
      "name": "[format('{0}/{1}', toLower(variables('cosmosAccountName')), variables('cosmosDatabase2Name'))]",
      "properties": {
        "resource": {
          "id": "[variables('cosmosDatabase2Name')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', toLower(variables('cosmosAccountName')))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2024-05-15",
      "name": "[format('{0}/{1}/{2}', toLower(variables('cosmosAccountName')), variables('cosmosDatabase2Name'), variables('cosmosDB2Container1Name'))]",
      "properties": {
        "resource": {
          "id": "[variables('cosmosDB2Container1Name')]",
          "partitionKey": {
            "paths": [
              "[format('/{0}', variables('cosmosDB2Container1PK'))]"
            ],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/_etag/?"
              }
            ],
            "vectorIndexes": [
              {
                "path": "/vectorProperty",
                "type": "diskANN"
              }
            ]
          }
        },
        "options": {
          "autoscaleSettings": {
            "maxThroughput": 1000
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', toLower(variables('cosmosAccountName')), variables('cosmosDatabase2Name'))]"
      ]
    }
  ]
}